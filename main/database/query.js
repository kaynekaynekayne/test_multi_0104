export default Object.freeze({
    // 현재 카세트의 실시간 처리중인 내역 조회
    SELECT_ORDER_LIST:
    `SELECT CASSET_ID
      , SLOT_ID
      , SLOT_NO
      , BARCODE_NO
      , PATIENT_ID
      , PATIENT_NM
      , ORDER_DTTM
      , STATE
      , MALARIA_COUNT
      , PLT_COUNT
      , ANALYZE_DTTM
      , BIRTHDAY
      , GENDER
      , TEST_TYPE
      , CREATE_DTTM
      , CREATE_ID
      , MODIFY_DTTM
      , MODIFY_ID
    FROM TB_ORDER_LIST
    WHERE CASSET_ID = ?
    ORDER BY ORDER_DTTM ASC`,

    IS_SIGNED_HISTORY:
    `SELECT (CASE WHEN (COUNT(1) > 0) THEN 1
			        ELSE 0
			       END) AS IS_SIGNED
     FROM TB_TEST_HISTORY
     WHERE CASSET_ID = ?
      AND SLOT_ID = ?
      AND SIGNED_STATE = 'Complete'`,

    IS_SAVE_HISTORY:
    `SELECT (CASE WHEN (COUNT(1) > 0) THEN 1
			        ELSE 0
			       END) AS IS_SAVED
     FROM TB_TEST_HISTORY
     WHERE CASSET_ID = ?
      AND SLOT_ID = ?`,

    DELETE_ORDER_LIST:
    `DELETE
      FROM TB_ORDER_LIST
     WHERE 1=1`,

    INSERT_ORDER_LIST:
    `INSERT OR REPLACE INTO TB_ORDER_LIST
     VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)`,

    IS_SAVE_ORDER_LIST:
    `SELECT (CASE WHEN (COUNT(1) > 0) THEN 1
      		    ELSE 0
      		   END) AS IS_SAVED
      FROM TB_ORDER_LIST
     WHERE CASSET_ID = ?
        AND SLOT_ID = ?`,

    UPDATE_ORDER_LIST:
    `UPDATE TB_ORDER_LIST
     SET ANALYZE_DTTM = ?
        , MALARIA_COUNT = ?
        , MODIFY_DTTM = ?
        , MODIFY_ID = ?
     WHERE CASSET_ID = ?
        AND SLOT_ID = ?`,

    UPDATE_ORDER_STATE:
    `UPDATE TB_ORDER_LIST
     SET STATE = ?
        , MODIFY_DTTM = ?
        , MODIFY_ID = ?
     WHERE CASSET_ID = ?
        AND SLOT_ID = ?`,

    // TEST HISTORY
    INSERT_TEST_HISTORY:
    `INSERT OR REPLACE INTO TB_TEST_HISTORY
     (CASSET_ID
       , SLOT_ID
       , SLOT_NO
       , BARCODE_NO
       , PATIENT_ID
       , PATIENT_NM
       , ORDER_DTTM
       , STATE_CD
       , MALARIA_COUNT
       , PLT_COUNT
       , ANALYZE_DTTM
       , BIRTHDAY
       , GENDER
       , TEST_TYPE
       , SIGNED_STATE
       , SIGNED_DTTM
       , SIGNED_USER_ID
       , WBC_COMMENT
       , RBC_COMMENT
       , MAX_WBC_COUNT
       , MAX_RBC_COUNT
       , SERIAL_NO
       , CREATE_DTTM
       , CREATE_ID
       , MODIFY_DTTM
       , MODIFY_ID
       , TACT_TIME
       , IS_NS_NB_INTEGRATION
       , IS_NORMAL)
    VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)`,

    UPDATE_TEST_HISTORY:
    `UPDATE TB_TEST_HISTORY
     SET SLOT_NO = ?
       , BARCODE_NO = ?
       , PATIENT_ID = ?
       , PATIENT_NM = ?
       , ORDER_DTTM = ?
       , STATE_CD = ?
       , MALARIA_COUNT = ?
       , PLT_COUNT = ?
       , ANALYZE_DTTM = ?
       , BIRTHDAY = ?
       , GENDER = ?
       , TEST_TYPE = ?
       , SERIAL_NO = ?
       , MAX_WBC_COUNT = ?
       , MAX_RBC_COUNT = ?
       , MODIFY_DTTM = ?
       , MODIFY_ID = ?
    WHERE CASSET_ID = ?
      AND SLOT_ID = ?`,

    SELECT_TEST_HISTORY:
    `SELECT CASSET_ID
      , SLOT_ID
      , SLOT_NO
      , BARCODE_NO
      , PATIENT_ID
      , PATIENT_NM
      , ORDER_DTTM
      , STATE_CD
      , MALARIA_COUNT
      , PLT_COUNT
      , ANALYZE_DTTM
      , BIRTHDAY
      , GENDER
      , GENDER    AS GENDER_CD
      , TEST_TYPE
      , TEST_TYPE AS TEST_TYPE_CD
      , SIGNED_STATE
      , SIGNED_DTTM
      , SIGNED_USER_ID
      , WBC_COMMENT
      , RBC_COMMENT
      , MAX_WBC_COUNT
      , MAX_RBC_COUNT
      , SERIAL_NO
      , CREATE_DTTM
      , CREATE_ID
      , MODIFY_DTTM
      , MODIFY_ID
      , TACT_TIME
      , IS_NS_NB_INTEGRATION
      , IS_NORMAL
      , IS_CHECKED
     FROM TB_TEST_HISTORY
    WHERE SLOT_ID = ?
    ORDER BY ANALYZE_DTTM DESC`,

    SEARCH_TEST_HISTORY_LIST_ALL:
    `SELECT TA.*
    	FROM (SELECT SA.CASSET_ID
    		, SA.SLOT_ID
    		, SA.SLOT_NO
    		, SA.BARCODE_NO
    		, SA.PATIENT_ID
    		, SA.PATIENT_NM
    		, SA.ORDER_DTTM
    		, SA.MALARIA_COUNT
    		, SA.PLT_COUNT
    		, SA.ANALYZE_DTTM
    		, SA.BIRTHDAY
    		, (CASE WHEN (SA.GENDER = '01') THEN 'Male'
    			ELSE 'Female'
    		   END) AS GENDER
    		, SA.GENDER AS GENDER_CD
    		, (CASE WHEN (SA.TEST_TYPE = '01' OR SA.TEST_TYPE = '04') THEN 'PB'
    			ELSE 'BF'
    		   END) AS TEST_TYPE
    		, SA.TEST_TYPE AS TEST_TYPE_CD
    		, SA.SIGNED_STATE
    		, SA.SIGNED_DTTM
    		, SA.SIGNED_USER_ID
    		, SA.WBC_COMMENT
    		, SA.RBC_COMMENT
    		, SA.MAX_WBC_COUNT
    		, SA.MAX_RBC_COUNT
    		, SA.SERIAL_NO
    		, SA.TACT_TIME
    		, SA.IS_NS_NB_INTEGRATION
        , SA.NR_COUNT
        , SA.WBC_TOTAL
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'NE' THEN SA.AFTER_COUNT END), '0') AS A_Neutrophil
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'NS' THEN SA.AFTER_COUNT END), '0') AS A_NeutrophilS
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'NB' THEN SA.AFTER_COUNT END), '0') AS A_NeutrophilB
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'ME' THEN SA.AFTER_COUNT END), '0') AS A_Metamyelocyte
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'MY' THEN SA.AFTER_COUNT END), '0') AS A_Myelocyte
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'PR' THEN SA.AFTER_COUNT END), '0') AS A_Promyelocyte
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'LY' THEN SA.AFTER_COUNT END), '0') AS A_Lymphocyte
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'LR' THEN SA.AFTER_COUNT END), '0') AS A_Reactive_lymphocyte
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'LA' THEN SA.AFTER_COUNT END), '0') AS A_Abnormal_lymphocyte
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'MO' THEN SA.AFTER_COUNT END), '0') AS A_Monocyte
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'EO' THEN SA.AFTER_COUNT END), '0') AS A_Eosinophil
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'BA' THEN SA.AFTER_COUNT END), '0') AS A_Basophil
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'BL' THEN SA.AFTER_COUNT END), '0') AS A_Blast
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'PC' THEN SA.AFTER_COUNT END), '0') AS A_Plasma_cell
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'NR' THEN SA.AFTER_COUNT END), '0') AS A_nRBC
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'GP' THEN SA.AFTER_COUNT END), '0') AS A_Giant_platelet
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'PA' THEN SA.AFTER_COUNT END), '0') AS A_Platelet_aggregation
        , IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'MA' THEN SA.AFTER_COUNT END), '0') AS A_Malaria
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_TITLE = 'AR' THEN SA.AFTER_COUNT END), '0') AS A_Artifact
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_ID = '90' THEN SA.AFTER_COUNT END), '0') 		AS A_CUSTOM_90_CNT
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_ID = '90' THEN SA.AFTER_CLASS_NM END), '0') 	AS A_CUSTOM_90_NM
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_ID = '91' THEN SA.AFTER_COUNT END), '0') 		AS A_CUSTOM_91_CNT
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_ID = '91' THEN SA.AFTER_CLASS_NM END), '0') 	AS A_CUSTOM_91_NM
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_ID = '92' THEN SA.AFTER_COUNT END), '0') 		AS A_CUSTOM_92_CNT
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_ID = '92' THEN SA.AFTER_CLASS_NM END), '0') 	AS A_CUSTOM_92_NM
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_ID = '93' THEN SA.AFTER_COUNT END), '0') 		AS A_CUSTOM_93_CNT
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_ID = '93' THEN SA.AFTER_CLASS_NM END), '0') 	AS A_CUSTOM_93_NM
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_ID = '94' THEN SA.AFTER_COUNT END), '0') 		AS A_CUSTOM_94_CNT
    		, IFNULL(MAX(CASE WHEN SA.AFTER_CLASS_ID = '94' THEN SA.AFTER_CLASS_NM END), '0') 	AS A_CUSTOM_94_NM
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'NE' THEN SA.BEFORE_COUNT END), '0') AS B_Neutrophil
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'NS' THEN SA.BEFORE_COUNT END), '0') AS B_NeutrophilS
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'NB' THEN SA.BEFORE_COUNT END), '0') AS B_NeutrophilB
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'ME' THEN SA.BEFORE_COUNT END), '0') AS B_Metamyelocyte
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'MY' THEN SA.BEFORE_COUNT END), '0') AS B_Myelocyte
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'PR' THEN SA.BEFORE_COUNT END), '0') AS B_Promyelocyte
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'LY' THEN SA.BEFORE_COUNT END), '0') AS B_Lymphocyte
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'LR' THEN SA.BEFORE_COUNT END), '0') AS B_Reactive_lymphocyte
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'LA' THEN SA.BEFORE_COUNT END), '0') AS B_Abnormal_lymphocyte
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'MO' THEN SA.BEFORE_COUNT END), '0') AS B_Monocyte
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'EO' THEN SA.BEFORE_COUNT END), '0') AS B_Eosinophil
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'BA' THEN SA.BEFORE_COUNT END), '0') AS B_Basophil
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'BL' THEN SA.BEFORE_COUNT END), '0') AS B_Blast
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'PC' THEN SA.BEFORE_COUNT END), '0') AS B_Plasma_cell
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'NR' THEN SA.BEFORE_COUNT END), '0') AS B_nRBC
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'GP' THEN SA.BEFORE_COUNT END), '0') AS B_Giant_platelet
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'PA' THEN SA.BEFORE_COUNT END), '0') AS B_Platelet_aggregation
        , IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'MA' THEN SA.BEFORE_COUNT END), '0') AS B_Malaria
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_TITLE = 'AR' THEN SA.BEFORE_COUNT END), '0') AS B_Artifact
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_ID = '90' THEN SA.BEFORE_COUNT END), '0') 		AS B_CUSTOM_90_CNT
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_ID = '90' THEN SA.BEFORE_CLASS_NM END), '0') 	AS B_CUSTOM_90_NM
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_ID = '91' THEN SA.BEFORE_COUNT END), '0') 		AS B_CUSTOM_91_CNT
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_ID = '91' THEN SA.BEFORE_CLASS_NM END), '0') 	AS B_CUSTOM_91_NM
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_ID = '92' THEN SA.BEFORE_COUNT END), '0') 		AS B_CUSTOM_92_CNT
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_ID = '92' THEN SA.BEFORE_CLASS_NM END), '0') 	AS B_CUSTOM_92_NM
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_ID = '93' THEN SA.BEFORE_COUNT END), '0') 		AS B_CUSTOM_93_CNT
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_ID = '93' THEN SA.BEFORE_CLASS_NM END), '0') 	AS B_CUSTOM_93_NM
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_ID = '94' THEN SA.BEFORE_COUNT END), '0') 		AS B_CUSTOM_94_CNT
    		, IFNULL(MAX(CASE WHEN SA.BEFORE_CLASS_ID = '94' THEN SA.BEFORE_CLASS_NM END), '0') 	AS B_CUSTOM_94_NM
        , IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '01' AND SA.RBC_CLASS_ID = '01' THEN SA.RBC_DEGREE END), '0') 	AS Size_Normal
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '01' AND SA.RBC_CLASS_ID = '02' THEN SA.RBC_DEGREE END), '0') 	AS Size_Macrocyte
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '01' AND SA.RBC_CLASS_ID = '03' THEN SA.RBC_DEGREE END), '0') 	AS Size_Microcyte
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '01' AND SA.RBC_CLASS_ID = '04' THEN SA.RBC_DEGREE END), '0') 	AS Size_Anisocytosis
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '02' AND SA.RBC_CLASS_ID = '01' THEN SA.RBC_DEGREE END), '0') 	AS Chromia_Normal
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '02' AND SA.RBC_CLASS_ID = '02' THEN SA.RBC_DEGREE END), '0') 	AS Chromia_Hyperchromic
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '02' AND SA.RBC_CLASS_ID = '03' THEN SA.RBC_DEGREE END), '0') 	AS Chromia_Hypochromic
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '02' AND SA.RBC_CLASS_ID = '04' THEN SA.RBC_DEGREE END), '0') 	AS Chromia_Polychromia
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '03' AND SA.RBC_CLASS_ID = '01' THEN SA.RBC_DEGREE END), '0') 	AS Shape_Normal
        , IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '03' AND SA.RBC_CLASS_ID = '02' THEN SA.RBC_DEGREE END), '0') 	AS Shape_Poikilocytosis
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '03' AND SA.RBC_CLASS_ID = '03' THEN SA.RBC_DEGREE END), '0') 	AS Shape_Target_Cell
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '03' AND SA.RBC_CLASS_ID = '04' THEN SA.RBC_DEGREE END), '0') 	AS Shape_Burr_Cell
        , IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '03' AND SA.RBC_CLASS_ID = '05' THEN SA.RBC_DEGREE END), '0') 	AS Shape_Acanthocyte
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '03' AND SA.RBC_CLASS_ID = '06' THEN SA.RBC_DEGREE END), '0') 	AS Shape_Ovalocyte
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '03' AND SA.RBC_CLASS_ID = '07' THEN SA.RBC_DEGREE END), '0') 	AS Shape_Schistocyte
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '03' AND SA.RBC_CLASS_ID = '08' THEN SA.RBC_DEGREE END), '0') 	AS Shape_Sickle_Cell
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '03' AND SA.RBC_CLASS_ID = '09' THEN SA.RBC_DEGREE END), '0') 	AS Shape_Stomatocyte
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '03' AND SA.RBC_CLASS_ID = '10' THEN SA.RBC_DEGREE END), '0') 	AS Shape_Tear_Drop_cell
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '03' AND SA.RBC_CLASS_ID = '11' THEN SA.RBC_DEGREE END), '0') 	AS Shape_Spherocyte
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '05' AND SA.RBC_CLASS_ID = '01' THEN SA.RBC_DEGREE END), '0') 	AS Howell_Jolly_Body
  			, IFNULL(MAX(CASE WHEN SA.RBC_CATEGORY_ID = '05' AND SA.RBC_CLASS_ID = '02' THEN SA.RBC_DEGREE END), '0') 	AS Basophilic_Stippling
    		FROM (SELECT A.CASSET_ID
    				, A.SLOT_ID
    				, A.SLOT_NO
    				, A.BARCODE_NO
    				, A.PATIENT_ID
    				, A.PATIENT_NM
    				, A.ORDER_DTTM
    				, A.MALARIA_COUNT
    				, A.PLT_COUNT
    				, A.ANALYZE_DTTM
    				, A.BIRTHDAY
    				, A.GENDER
    				, A.GENDER
    				, A.TEST_TYPE
    				, A.SIGNED_STATE
    				, A.SIGNED_DTTM
    				, A.SIGNED_USER_ID
    				, A.WBC_COMMENT
    				, A.RBC_COMMENT
    				, A.MAX_WBC_COUNT
    				, A.MAX_RBC_COUNT
            , (SELECT B.COUNT
       			   FROM TB_WBC_CLASSIFICATION B
       		     WHERE A.CASSET_ID = B.CASSET_ID AND A.SLOT_ID = B.SLOT_ID
       				  AND B.CLASS_TITLE = 'NR') AS NR_COUNT
       		  , (SELECT SUM(B.COUNT)
       			   FROM TB_WBC_CLASSIFICATION B
       		     WHERE A.CASSET_ID = B.CASSET_ID AND A.SLOT_ID = B.SLOT_ID
           			AND B.CLASS_TITLE <> 'NR'
           			AND B.CLASS_TITLE <> 'GP'
           			AND B.CLASS_TITLE <> 'PA'
           			AND B.CLASS_TITLE <> 'AR'
           			AND B.CLASS_TITLE <> 'MA'
           			AND B.CLASS_TITLE <> 'MC') AS WBC_TOTAL
    				, A.SERIAL_NO
    				, B.CLASS_ID				  AS AFTER_CLASS_ID
    				, B.CLASS_NM				  AS AFTER_CLASS_NM
    				, B.CLASS_TITLE				AS AFTER_CLASS_TITLE
    				, B.COUNT					    AS AFTER_COUNT
    				, C.CLASS_ID				  AS BEFORE_CLASS_ID
    				, C.CLASS_NM				  AS BEFORE_CLASS_NM
    				, C.CLASS_TITLE				AS BEFORE_CLASS_TITLE
    				, C.COUNT					    AS BEFORE_COUNT
    				, A.ANALYZE_DTTM            AS ANALYZE_DTTM
    				, A.TACT_TIME               AS TACT_TIME
    				, A.IS_NS_NB_INTEGRATION    AS IS_NS_NB_INTEGRATION
            , D.CATEGORY_ID				      AS RBC_CATEGORY_ID
  					, D.CLASS_ID				        AS RBC_CLASS_ID
  					, D.DEGREE					        AS RBC_DEGREE
            , A.IS_NORMAL               AS IS_NORMAL
            , A.IS_CHECKED              AS IS_CHECKED
    			FROM TB_TEST_HISTORY A
    				, TB_WBC_CLASSIFICATION B
    				, TB_WBC_CLASSIFICATION_HIST C
            , TB_RBC_CLASSIFICATION D
    			WHERE 1=1
    				AND A.CASSET_ID = B.CASSET_ID
    				AND A.SLOT_ID = B.SLOT_ID
    				AND A.CASSET_ID = C.CASSET_ID
    				AND A.SLOT_ID = C.SLOT_ID
            AND B.CLASS_ID = C.CLASS_ID
            AND A.CASSET_ID = D.CASSET_ID
					  AND A.SLOT_ID = D.SLOT_ID
  					GROUP BY A.SLOT_ID, B.CLASS_ID, C.CLASS_ID, D.CATEGORY_ID, D.CLASS_ID) SA
    			GROUP BY SA.SLOT_ID) TA
    	WHERE 1=1`,

    SEARCH_TEST_HISTORY_LIST:
     `SELECT
      	TA.CASSET_ID
      	, TA.SLOT_ID
      	, TA.SLOT_NO
      	, TA.BARCODE_NO
      	, TA.PATIENT_ID
      	, TA.PATIENT_NM
      	, TA.ORDER_DTTM
      	, TA.MALARIA_COUNT
      	, TA.PLT_COUNT
      	, TA.ANALYZE_DTTM
      	, TA.BIRTHDAY
      	, (CASE WHEN (TA.GENDER = '01') THEN 'Male'
      	    ELSE 'Female'
      	   END) AS GENDER
      	, TA.GENDER AS GENDER_CD
      	, (CASE WHEN (TA.TEST_TYPE = '01' OR TA.TEST_TYPE = '04') THEN 'PB'
      		 ELSE 'BF'
      	   END) AS TEST_TYPE
      	, TA.TEST_TYPE AS TEST_TYPE_CD
      	, TA.SIGNED_STATE
      	, TA.SIGNED_DTTM
      	, TA.SIGNED_USER_ID
      	, TA.WBC_COMMENT
      	, TA.RBC_COMMENT
      	, TA.MAX_WBC_COUNT
      	, TA.MAX_RBC_COUNT
      	, TA.SERIAL_NO
      	, TA.TACT_TIME
      	, TA.IS_NS_NB_INTEGRATION
      	, TA.IS_NORMAL
      	, TA.IS_CHECKED
      	, TB.USER_ID
      	, TB.MACHINE_ID
      	, TB.HOST_IP
      	, TB.LOCAL_IP
      	, IFNULL(TB.LOCK_STATE, 'N') AS LOCK_STATE
      	, TB.LOCK_DTTM
      	, ROW_NUMBER() OVER(ORDER BY TA.ANALYZE_DTTM DESC) AS ROW_NUM
      	, (SELECT JSON_GROUP_ARRAY(
      		JSON_OBJECT('id', B.CLASS_ID, 'title', B.CLASS_TITLE, 'name', B.CLASS_NM, 'count', B.COUNT)
      	  ) FROM TB_WBC_CLASSIFICATION B WHERE TA.CASSET_ID = B.CASSET_ID AND TA.SLOT_ID = B.SLOT_ID) WBC_INFO
      	, (SELECT B.COUNT
      	   FROM TB_WBC_CLASSIFICATION B
      	  WHERE TA.CASSET_ID = B.CASSET_ID AND TA.SLOT_ID = B.SLOT_ID AND B.CLASS_TITLE = 'NR') AS NR_COUNT
      	, (SELECT SUM(B.COUNT)
      	   FROM TB_WBC_CLASSIFICATION B
      	  WHERE TA.CASSET_ID = B.CASSET_ID AND TA.SLOT_ID = B.SLOT_ID
      									AND B.CLASS_TITLE <> 'NR'
      									AND B.CLASS_TITLE <> 'GP'
      									AND B.CLASS_TITLE <> 'PA'
      									AND B.CLASS_TITLE <> 'AR'
      									AND B.CLASS_TITLE <> 'MA'
      									AND B.CLASS_TITLE <> 'MC') AS WBC_TOTAL
       FROM TB_TEST_HISTORY TA
      	LEFT JOIN TB_VIEWER_LOCK_INFO TB
      		ON TA.CASSET_ID = TB.CASSET_ID
      		AND TA.SLOT_ID = TB.SLOT_ID
      WHERE 1=1`,

    // 데이터가 많아지면 집계에 시간이 너무 오래걸림
    // SEARCH_TEST_HISTORY_LIST:
    // `SELECT TA.*
    //   	, (SELECT NE + ME + MY + PR + LY + LR + LA + MO + EO + BA + BL + PC + CUSTOM_90_CNT + CUSTOM_91_CNT + CUSTOM_92_CNT + CUSTOM_93_CNT + CUSTOM_94_CNT) AS TOTAL
    //   FROM (SELECT
    //   		A.CASSET_ID
    //   		, A.SLOT_ID
    //   		, A.SLOT_NO
    //   		, A.BARCODE_NO
    //   		, A.PATIENT_ID
    //   		, A.PATIENT_NM
    //   		, A.ORDER_DTTM
    //   		, A.MALARIA_COUNT
    //       , A.PLT_COUNT
    //   		, A.ANALYZE_DTTM
    //   		, A.BIRTHDAY
    //   		, (CASE WHEN (A.GENDER = '01') THEN 'Male'
    //   		  ELSE 'Female'
    //   		 END) AS GENDER
    //   		, A.GENDER AS GENDER_CD
    //   		, (CASE WHEN (A.TEST_TYPE = '01') THEN 'PB'
    //   		  ELSE 'BF'
    //   		 END) AS TEST_TYPE
    //   		, A.TEST_TYPE AS TEST_TYPE_CD
    //   		, A.SIGNED_STATE
    //   		, A.SIGNED_DTTM
    //   		, A.SIGNED_USER_ID
    //   		, A.WBC_COMMENT
    //   		, A.RBC_COMMENT
    //   		, A.MAX_WBC_COUNT
    //   		, A.MAX_RBC_COUNT
    //   		, A.SERIAL_NO
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   			 THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '01')
    //   			 ELSE (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '01')
    //       	   END) AS NE
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   			 THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '02')
    //   			 ELSE '0'
    //   		   END) AS ME
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '03')
    //   			 ELSE '0'
    //   		   END) AS MY
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   			 THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '04')
    //   		     ELSE '0'
    //   		   END) AS PR
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '05')
    //   		     ELSE (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '02')
    //   		   END) AS LY
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '61')
    //   		     ELSE '0'
    //   		   END) AS LR
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '62')
    //   		     ELSE '0'
    //   		   END) AS LA
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '07')
    //   		     ELSE (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '03')
    //   		   END) AS MO
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '08')
    //   		     ELSE (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '04')
    //   		   END) AS EO
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '09')
    //   		     ELSE (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '05')
    //   		   END) AS BA
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '10')
    //   		     ELSE (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '06')
    //   		   END) AS BL
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '11')
    //   		     ELSE (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '07')
    //   		   END) AS PC
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '12')
    //   		     ELSE (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '08')
    //   		   END) AS NR
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '13')
    //   		     ELSE '0'
    //   		   END) AS GP
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '14')
    //   		     ELSE '0'
    //   		   END) AS PA
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '15')
    //   		     ELSE (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '09')
    //   		   END) AS AR
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN '0'
    //   		     ELSE (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '10')
    //   		   END) AS MC
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(CLASS_NM), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '90')
    //   		     ELSE '0'
    //   		   END) AS CUSTOM_90_TITLE
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(CLASS_NM), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '91')
    //   		     ELSE '0'
    //   		   END) AS CUSTOM_91_TITLE
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(CLASS_NM), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '92')
    //   		     ELSE '0'
    //   		   END) AS CUSTOM_92_TITLE
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(CLASS_NM), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '93')
    //   		     ELSE '0'
    //   		   END) AS CUSTOM_93_TITLE
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(CLASS_NM), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '94')
    //   		     ELSE '0'
    //   		   END) AS CUSTOM_94_TITLE
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '90')
    //   		     ELSE '0'
    //   		   END) AS CUSTOM_90_CNT
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '91')
    //   		     ELSE '0'
    //   		   END) AS CUSTOM_91_CNT
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '92')
    //   		     ELSE '0'
    //   		   END) AS CUSTOM_92_CNT
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '93')
    //   		     ELSE '0'
    //   		   END) AS CUSTOM_93_CNT
    //   		, (CASE WHEN A.TEST_TYPE = '01' OR A.TEST_TYPE = '04'
    //   		     THEN (SELECT IFNULL(MIN(COUNT), '0') FROM TB_WBC_CLASSIFICATION WHERE SLOT_ID = A.SLOT_ID AND CLASS_ID = '94')
    //   		     ELSE '0'
    //   		   END) AS CUSTOM_94_CNT
    //   FROM TB_TEST_HISTORY A
    //   WHERE 1=1) TA
    //   WHERE 1=1`,

    UPDATE_TEST_HISTORY_PATIENT:
    `UPDATE TB_TEST_HISTORY
     SET BARCODE_NO = ?
        , PATIENT_ID = ?
        , PATIENT_NM = ?
        , MODIFY_DTTM = ?
        , MODIFY_ID = ?
     WHERE CASSET_ID = ?
        AND SLOT_ID = ?`,

     UPDATE_TEST_HISTORY_ANALYZE_DTTM:
     `UPDATE TB_TEST_HISTORY
      SET ANALYZE_DTTM = ?
         , MALARIA_COUNT = ?
         , MODIFY_DTTM = ?
         , MODIFY_ID = ?
      WHERE CASSET_ID = ?
         AND SLOT_ID = ?`,

     DELETE_TEST_HISTORY:
     `DELETE FROM TB_TEST_HISTORY
      WHERE SLOT_ID IN (SELECT SLOT_ID
				                FROM TB_TEST_HISTORY
                        WHERE SLOT_ID IN (userInput))`,

     // classification
     INSERT_WBC_CLASSIFICATION:
     `INSERT OR REPLACE INTO TB_WBC_CLASSIFICATION
      VALUES (?,?,?,?,?,?,?,?,?,?)`,

     INSERT_WBC_CLASSIFICATION_ALL:
     `INSERT OR REPLACE INTO TB_WBC_CLASSIFICATION
      VALUES userInput`,

     INSERT_WBC_CLASSIFICATION_HIST:
     `INSERT OR REPLACE INTO TB_WBC_CLASSIFICATION_HIST
      VALUES userInput`,

     UPDATE_WBC_CLASSIFICATION_HIST:
     `INSERT OR REPLACE INTO TB_WBC_CLASSIFICATION_HIST
      VALUES userInput`,

     IS_SAVE_WBC_CLASSIFICATION:
     `SELECT (CASE WHEN (COUNT(1) > 0) THEN 1
               ELSE 0
              END) AS IS_SAVED
       FROM TB_WBC_CLASSIFICATION
      WHERE CASSET_ID = ?
         AND SLOT_ID = ?
         AND CLASS_ID = ?`,

     DELETE_WBC_CLASSIFICATION_HIST:
     `DELETE FROM TB_WBC_CLASSIFICATION_HIST
      WHERE CASSET_ID = ?
          AND SLOT_ID = ?`,

     SELECT_WBC_CLASSIFICATION_HIST:
     `SELECT
        CASSET_ID
        , SLOT_ID
        , CLASS_ID
        , CLASS_NM
        , CLASS_TITLE
        , COUNT
        , CREATE_DTTM
        , CREATE_ID
        , MODIFY_DTTM
        , MODIFY_ID
     FROM TB_WBC_CLASSIFICATION_HIST
      WHERE SLOT_ID = ?`,

     UPDATE_WBC_CLASSIFICATION:
     `UPDATE TB_WBC_CLASSIFICATION
      SET COUNT = ?
         , MODIFY_DYYM = ?
         , MODIFY_ID = ?
      WHERE CASSET_ID = ?
        AND SLOT_ID = ?
        AND CLASS_ID = ?`,

     INSERT_RBC_CATEGORYES:
     `INSERT OR REPLACE INTO TB_RBC_CATEGORY
      VALUES userInput`,

     IS_SAVE_RBC_CATEGORYES:
     `SELECT (CASE WHEN (COUNT(1) > 0) THEN 1
               ELSE 0
              END) AS IS_SAVED
       FROM TB_RBC_CATEGORY
      WHERE CASSET_ID = ?
         AND SLOT_ID = ?
         AND CATEGORY_ID = ?`,

     INSERT_RBC_CLASSIFICATION:
     `INSERT OR REPLACE INTO TB_RBC_CLASSIFICATION
      VALUES userInput`,

     INSERT_RBC_CLASSIFICATION_HIST:
     `INSERT OR REPLACE INTO TB_RBC_CLASSIFICATION_HIST
      VALUES userInput`,

     IS_SAVE_RBC_CLASSIFICATION:
     `SELECT (CASE WHEN (COUNT(1) > 0) THEN 1
               ELSE 0
              END) AS IS_SAVED
       FROM TB_RBC_CLASSIFICATION
      WHERE CASSET_ID = ?
         AND SLOT_ID = ?
         AND CATEGORY_ID = ?
         AND CLASS_ID = ?`,

     SELECT_WBC_CLASSIFICATION:
     `SELECT
       CASSET_ID
       , SLOT_ID
       , CLASS_ID
       , CLASS_NM
       , CLASS_TITLE
       , COUNT
      FROM TB_WBC_CLASSIFICATION
      WHERE SLOT_ID = ?`,

     SELECT_RBC_CLASSIFICATION:
     `SELECT
        TA.CASSET_ID
        , TA.SLOT_ID
        , TA.CATEGORY_ID
        , TA.CATEGORY_NM
        , TB.CLASS_ID
        , TB.CLASS_NM
        , TB.DEGREE
      FROM TB_RBC_CATEGORY TA
      , (SELECT *
          FROM TB_RBC_CLASSIFICATION
         WHERE SLOT_ID = ?
         ORDER BY CLASS_ID ASC
        ) TB
      WHERE TA.CASSET_ID = TB.CASSET_ID
      	AND TA.SLOT_ID = TB.SLOT_ID
      	AND TA.CATEGORY_ID = TB.CATEGORY_ID
        AND TA.SLOT_ID = ?
        ORDER BY TA.CATEGORY_ID ASC`,

      SELECT_RBC_CLASSIFICATION_HIST:
      `SELECT
         TA.CASSET_ID
         , TA.SLOT_ID
         , TA.CATEGORY_ID
         , TA.CATEGORY_NM
         , TB.CLASS_ID
         , TB.CLASS_NM
         , TB.DEGREE
       FROM TB_RBC_CATEGORY TA
       , (SELECT *
           FROM TB_RBC_CLASSIFICATION_HIST
          WHERE SLOT_ID = ?
          ORDER BY CLASS_ID ASC
         ) TB
       WHERE TA.CASSET_ID = TB.CASSET_ID
         AND TA.SLOT_ID = TB.SLOT_ID
         AND TA.CATEGORY_ID = TB.CATEGORY_ID
         AND TA.SLOT_ID = ?
         ORDER BY TA.CATEGORY_ID ASC`,

    UPDATE_RBC_COMMENT:
    `UPDATE TB_TEST_HISTORY
      SET RBC_COMMENT = ?
     WHERE SLOT_ID = ?`,

    UPDATE_RBC_CLASSIFICATION:
    `UPDATE TB_RBC_CLASSIFICATION
      SET DEGREE = ?
     WHERE CASSET_ID = ?
      AND SLOT_ID = ?
      AND CATEGORY_ID = ?
      AND CLASS_ID = ?`,

    UPDATE_RBC_CLASSIFICATION_SKMC:
    `UPDATE TB_RBC_CLASSIFICATION
      SET DEGREE = ?
     WHERE CASSET_ID = ?
      AND SLOT_ID = ?
      AND CATEGORY_ID = ?
      AND CLASS_ID = ?`,

    UPDATE_WBC_COMMENT:
    `UPDATE TB_TEST_HISTORY
      SET WBC_COMMENT = ?
     WHERE SLOT_ID = ?`,

    UPDATE_SIGNED_STATE:
    `UPDATE TB_TEST_HISTORY
      SET SIGNED_STATE = ?
        , SIGNED_DTTM = ?
        , SIGNED_USER_ID = ?
        , MODIFY_DTTM = ?
        , MODIFY_ID = ?
     WHERE SLOT_ID = ?`,

    UPDATE_MALARIA_COUNT:
    `UPDATE TB_TEST_HISTORY
      SET MALARIA_COUNT = ?
        , MODIFY_DTTM = ?
        , MODIFY_ID = ?
     WHERE SLOT_ID = ?`,

     // User
     INSERT_TB_USER:
     `INSERT INTO TB_USER
      VALUES(?,?,?,?,?,?,?,?,?,?)`,

     UPDATE_TB_USER:
     `UPDATE TB_USER
       SET USER_NM = ?
         , ENC_PWD = ?
         , EMP_NO = ?
         , AUTH_CD = ?
         , IS_AVAILABLE = ?
         , MODIFY_DTTM = ?
         , MODIFY_ID = ?
      WHERE USER_ID = ?`,

    DELETE_TB_USER:
    `DELETE FROM TB_USER
     WHERE USER_ID = ?`,

    INSERT_USER_LOGIN_HIST:
    `INSERT INTO TB_USER_LOGIN_HIST
     VALUES(?,?,?,?,?,?)`,

    INSERT_USER_AUTHORITY:
    `INSERT INTO TB_USER_AUTHORITY
     VALUES (?,?,?,?,?,?),
            (?,?,?,?,?,?),
            (?,?,?,?,?,?)`,

    IS_SAVE_USER_AUTHORITY:
    `SELECT (CASE WHEN (COUNT(1) > 0) THEN 1
      		    ELSE 0
      		   END) AS IS_SAVED
      FROM TB_USER_AUTHORITY
     WHERE AUTH_CD IN (?,?,?)`,

    INSERT_WBC_CELL_POSITION:
    `INSERT OR REPLACE INTO TB_WBC_CELL_POSITION
     VALUES userInput`,

    SELECT_WBC_CELL_POSITION:
    `SELECT CASSET_ID
         , SLOT_ID
         , FILE_ID
         , FILE_NM
         , POSX1
         , POSY1
         , POSX2
         , POSY2
         , ORG_WIDTH
         , ORG_HEIGHT
         , CREATE_DTTM
         , CREATE_ID
         , MODIFY_DTTM
         , MODIFY_ID
     FROM TB_WBC_CELL_POSITION
    WHERE SLOT_ID = ?`,

   INSERT_USER:
   `INSERT INTO TB_USER
    VALUES (?,?,?,?,?,?,?,?,?,?,?,?)`,

   IS_REGIST_USER:
   `SELECT (CASE WHEN (COUNT(1) > 0) THEN 1
    		     ELSE 0
    	      END) AS IS_REGIST
    FROM TB_USER
    WHERE USER_ID = ?`,

   SELECT_USER_LIST:
   `SELECT USER_ID
      , USER_NM
      , EMP_NO
      , POSITION
      , AUTH_CD
      , ENC_PWD
      , IS_AVAILABLE
      , LOGIN_DTTM
      , CREATE_DTTM
      , CREATE_ID
      , MODIFY_DTTM
      , MODIFY_ID
    FROM TB_USER`,

   UPDATE_USER_DTTM:
   `UPDATE TB_USER
     SET LOGIN_DTTM = ?
      , MODIFY_DTTM = ?
    WHERE USER_ID = ?`,

   UPDATE_USER:
   `UPDATE TB_USER
     SET AUTH_CD = ?
      , USER_NM = ?
      , IS_AVAILABLE = ?
      , EMP_NO = ?
      , MODIFY_DTTM = ?
    WHERE USER_ID = ?`,

   DELETE_USER:
   `DELETE
     FROM TB_USER
    WHERE USER_ID = ?`,

   INSERT_BF_WHOLE_SLIDE_PATH:
   `INSERT OR REPLACE INTO TB_BF_WHOLE_SLIDE_PATH
    VALUES userInput`,

   SELECT_BF_WHOLE_SLIDE_PATH:
   `SELECT CASSET_ID
      , SLOT_ID
      , SEQ_NO
      , PATH
      , IS_HIGH_POWER_SCAN
      , CREATE_DTTM
      , CREATE_ID
      , MODIFY_DTTM
      , MODIFY_ID
     FROM TB_BF_WHOLE_SLIDE_PATH
    WHERE SLOT_ID = ?`,

   ADD_TACT_TIME:
   `ALTER TABLE TB_TEST_HISTORY ADD COLUMN TACT_TIME TEXT`,

   ADD_IS_NS_NB_INTEGRATION:
   `ALTER TABLE TB_TEST_HISTORY ADD COLUMN IS_NS_NB_INTEGRATION TEXT DEFAULT 'N'`,

   ADD_IS_NORMAL:
   `ALTER TABLE TB_TEST_HISTORY ADD COLUMN IS_NORMAL TEXT DEFAULT 'Y'`,

   ADD_IS_CHECKED:
   `ALTER TABLE TB_TEST_HISTORY ADD COLUMN IS_CHECKED TEXT DEFAULT 'N'`,

   ADD_MIN_COUNT:
   `ALTER TABLE TB_LIS_TEST_CODE ADD COLUMN MIN_COUNT TEXT DEFAULT '0'`,

   ADD_SEQ_NO:
   `ALTER TABLE TB_SKMC_FAVORITE_REMARK ADD COLUMN SEQ_NO TEXT DEFAULT '0'`,

   UPDATE_IS_NORMAL_CELL:
  `UPDATE TB_TEST_HISTORY
    SET IS_NORMAL = ?
   WHERE SLOT_ID = ?`,

   UPDATE_IS_CHECKED_CELL:
    `UPDATE TB_TEST_HISTORY
      SET IS_CHECKED = ?
     WHERE SLOT_ID = ?`,

   SELECT_WBC_BF_MODIFY_LIST:
   `SELECT
    	A.CASSET_ID
    	, A.SLOT_ID
    	, A.CLASS_ID
    	, A.CLASS_TITLE
    	, A.CLASS_NM
    	, A.COUNT
    	, B.CURRENT_CLASS_ID
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '01' THEN 1 END) AS '01'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '02' THEN 1 END) AS '02'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '03' THEN 1 END) AS '03'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '04' THEN 1 END) AS '04'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '05' THEN 1 END) AS '05'
      , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '06' THEN 1 END) AS '06'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '07' THEN 1 END) AS '07'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '08' THEN 1 END) AS '08'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '09' THEN 1 END) AS '09'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '10' THEN 1 END) AS '10'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '11' THEN 1 END) AS '11'
    FROM TB_WBC_CLASSIFICATION A
    	, TB_WBC_IMAGE_HIST B
    WHERE 1=1
      AND A.SLOT_ID = ?
    	AND A.CASSET_ID = B.CASSET_ID
    	AND A.SLOT_ID = B.SLOT_ID
    	AND A.CLASS_ID = B.CLASS_ID
    GROUP BY A.CLASS_ID
    ORDER BY A.CLASS_ID ASC`,

   SELECT_WBC_MODIFY_LIST:
   `SELECT
    	A.CASSET_ID
    	, A.SLOT_ID
    	, A.CLASS_ID
    	, A.CLASS_TITLE
    	, A.CLASS_NM
    	, A.COUNT
    	, B.CURRENT_CLASS_ID
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '01' THEN 1 END) AS '01'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '71' THEN 1 END) AS '71'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '72' THEN 1 END) AS '72'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '02' THEN 1 END) AS '02'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '03' THEN 1 END) AS '03'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '04' THEN 1 END) AS '04'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '05' THEN 1 END) AS '05'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '61' THEN 1 END) AS '61'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '62' THEN 1 END) AS '62'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '07' THEN 1 END) AS '07'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '08' THEN 1 END) AS '08'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '09' THEN 1 END) AS '09'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '10' THEN 1 END) AS '10'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '11' THEN 1 END) AS '11'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '12' THEN 1 END) AS '12'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '13' THEN 1 END) AS '13'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '14' THEN 1 END) AS '14'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '15' THEN 1 END) AS '15'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '16' THEN 1 END) AS '16'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '90' THEN 1 END) AS '90'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '91' THEN 1 END) AS '91'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '92' THEN 1 END) AS '92'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '93' THEN 1 END) AS '93'
    	, COUNT(CASE WHEN B.CURRENT_CLASS_ID = '94' THEN 1 END) AS '94'
    FROM TB_WBC_CLASSIFICATION A
    	, TB_WBC_IMAGE_HIST B
    WHERE 1=1
      AND A.SLOT_ID = ?
    	AND A.CASSET_ID = B.CASSET_ID
    	AND A.SLOT_ID = B.SLOT_ID
    	AND A.CLASS_ID = B.CLASS_ID
    GROUP BY A.CLASS_ID
    ORDER BY A.CLASS_ID ASC`,

  SELECT_WBC_MODIFY_LIST_ALL:
  `SELECT
    	TA.CASSET_ID
    	, TA.SLOT_ID
      , TA.BARCODE_NO
	    , TA.IS_NS_NB_INTEGRATION
    	, (SELECT JSON_GROUP_ARRAY(
    				JSON_OBJECT('before', TA.CLASS_ID, 'after', TA.CURRENT_CLASS_ID,
    					'01', TA.NE, '02', TA.ME, '03', TA.MY, '04', TA.PR, '05', TA.LY, '07', TA.MO, '08', TA.EO,
    					'09', TA.BA, '10', TA.BL, '11', TA.PC, '12', TA.NR, '13', TA.GP, '14', TA.PA, '15', TA.AR,
    					'16', TA.MA, '71', TA.NS, '72', TA.NB, '61', TA.LR, '62', TA.LA, '90', TA.C90, '91', TA.C92,
    					'92', TA.C92, '93', TA.C93, '94', TA.C94)
    			  )
    	   ) AS Results
    FROM (
    	SELECT
    	   A.CASSET_ID
    	   , A.SLOT_ID
    	   , A.CLASS_ID
    	   , A.CLASS_NM
    	   , A.CLASS_TITLE
    	   , A.COUNT
    	   , B.CURRENT_CLASS_ID
         , C.BARCODE_NO
	       , C.IS_NS_NB_INTEGRATION
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '01' THEN 1 END) AS 'NE'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '71' THEN 1 END) AS 'NS'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '72' THEN 1 END) AS 'NB'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '02' THEN 1 END) AS 'ME'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '03' THEN 1 END) AS 'MY'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '04' THEN 1 END) AS 'PR'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '05' THEN 1 END) AS 'LY'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '61' THEN 1 END) AS 'LR'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '62' THEN 1 END) AS 'LA'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '07' THEN 1 END) AS 'MO'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '08' THEN 1 END) AS 'EO'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '09' THEN 1 END) AS 'BA'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '10' THEN 1 END) AS 'BL'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '11' THEN 1 END) AS 'PC'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '12' THEN 1 END) AS 'NR'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '13' THEN 1 END) AS 'GP'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '14' THEN 1 END) AS 'PA'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '15' THEN 1 END) AS 'AR'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '16' THEN 1 END) AS 'MA'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '90' THEN 1 END) AS 'C90'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '91' THEN 1 END) AS 'C91'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '92' THEN 1 END) AS 'C92'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '93' THEN 1 END) AS 'C93'
    	   , COUNT(CASE WHEN B.CURRENT_CLASS_ID = '94' THEN 1 END) AS 'C94'
    	 FROM TB_WBC_CLASSIFICATION A
    	   , TB_WBC_IMAGE_HIST B
         , TB_TEST_HISTORY C
    	 WHERE 1=1
    	   AND A.SLOT_ID IN userInput
    	   AND A.CASSET_ID = B.CASSET_ID
    	   AND A.SLOT_ID = B.SLOT_ID
    	   AND A.CLASS_ID = B.CLASS_ID
         AND A.CASSET_ID = C.CASSET_ID
	       AND A.SLOT_ID = C.SLOT_ID
    	 GROUP BY A.CASSET_ID, A.SLOT_ID, B.CLASS_ID
    	 ORDER BY A.SLOT_ID ASC) TA
    WHERE 1=1
    GROUP BY TA.CASSET_ID, TA.SLOT_ID`,

  INSERT_WBC_IMAGES_HIST:
  `INSERT OR REPLACE INTO TB_WBC_IMAGE_HIST
    VALUES userInput`,

  UPDATE_IMAGE_HIST:
  `UPDATE TB_WBC_IMAGE_HIST
    SET CURRENT_CLASS_ID = ?
   WHERE CASSET_ID = ?
    AND SLOT_ID = ?
    AND FILE_NM = ?
  `,

  UPDATE_WBC_IMAGES_HIST:
    `UPDATE TB_WBC_IMAGE_HIST
      SET CURRENT_CLASS_ID = ?
     WHERE CASSET_ID = ?
      AND SLOT_ID = ?
      AND userInput`,

  SELECT_RBC_DEGREE:
  `SELECT CATEGORY_ID
      , CLASS_ID
      , DEGREE_1
      , DEGREE_2
      , DEGREE_3
    FROM TB_RBC_DEGREE_VAL
   WHERE 1=1`,

  UPDATE_RBC_DEGREE:
  `UPDATE TB_RBC_DEGREE_VAL
    SET DEGREE_1 = ?
      , DEGREE_2 = ?
      , DEGREE_3 = ?
   WHERE CATEGORY_ID = ?
    AND CLASS_ID = ?`,

  INSERT_DEFAULT_RBC_DEGREE:
  `INSERT OR IGNORE INTO TB_RBC_DEGREE_VAL
    VALUES('01', '02', 5, 10, 20, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '03', 5, 10, 20, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '04', 5, 10, 20, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('02', '02', 5, 10, 20, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('02', '03', 5, 10, 20, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('02', '04', 5, 10, 20, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('03', '03', 2.5, 5, 20, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('03', '04', 2.5, 5, 20, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('03', '05', 2.5, 5, 20, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('03', '06', 2.5, 5, 20, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('03', '07', 0.5, 1, 2, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('03', '08', 0.5, 1, 2, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('03', '09', 2.5, 5, 20, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('03', '10', 2.5, 5, 20, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('03', '11', 2.5, 5, 20, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('05', '01', 1, 2, 3, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('05', '02', 2.5, 5, 20, strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
  `,

  INSERT_DEFAULT_HOT_KEY:
  `INSERT OR IGNORE INTO TB_HOT_KEY
    VALUES ('01', '01', 'NE', 'Neutrophil',         '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '71', 'NS', 'Neutrophil-Segmented',  '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '72', 'NB', 'Neutrophil-Band',       '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '02', 'ME', 'Metamyelocyte',         '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '03', 'MY', 'Myelocyte',             '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '04', 'PR', 'Promyelocyte',          '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '05', 'LY', 'Lymphocyte',            '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '61', 'LR', 'Reactive lymphocyte',   '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '62', 'LA', 'Abnormal lymphocyte',   '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '07', 'MO', 'Monocyte',              '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '08', 'EO', 'Eosinophil',            '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '09', 'BA', 'Basophil',              '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '10', 'BL', 'Blast',                 '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '11', 'PC', 'Plasma cell',           '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '12', 'NR', 'nRBC',                  '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '13', 'GP', 'Giant platelet',        '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '14', 'PA', 'Platelet aggregation',  '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '16', 'MA', 'Malaria',               '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '15', 'AR', 'Artifact(Smudge)',      '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '90', '', '',                        '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '91', '', '',                        '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '92', '', '',                        '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '93', '', '',                        '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('01', '94', '', '',                        '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('02', '01', 'NE', 'Neutrophil',            '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('02', '02', 'LY', 'Lymphocyte',            '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('02', '03', 'MO', 'Monocyte',              '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('02', '04', 'EO', 'Eosinophil',            '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('02', '05', 'BA', 'Basophil',              '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('02', '06', 'BL', 'Blast',                 '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('02', '07', 'PC', 'Plasma cell',           '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('02', '08', 'NR', 'NRBC',                  '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('02', '09', 'AR', 'Artifact(Smudge)',      '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('02', '10', 'MC', 'Malignant cell',        '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('02', '11', 'MT', 'Mesothelial cell',      '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
  `,

  SELECT_WBC_HOT_KEY:
  `SELECT A.HOT_KEY_TYPE
      , A.CLASS_ID
      , A.CLASS_TITLE
      , A.CLASS_NM
      , A.HOT_KEY
   FROM TB_HOT_KEY A
   WHERE 1=1
      AND A.HOT_KEY_TYPE = '01'
      AND A.CLASS_TITLE != ''
  `,

  SELECT_BF_HOT_KEY:
  `SELECT A.HOT_KEY_TYPE
      , A.CLASS_ID
      , A.CLASS_TITLE
      , A.CLASS_NM
      , A.HOT_KEY
   FROM TB_HOT_KEY A
   WHERE 1=1
      AND A.HOT_KEY_TYPE = '02'
      AND A.CLASS_TITLE != ''
  `,

  UPDATE_HOT_KEYS:
  `UPDATE TB_HOT_KEY
    SET HOT_KEY = ?
   WHERE HOT_KEY_TYPE = ?
    AND CLASS_ID = ?
  `,

  UPDATE_HOT_KEY_CLASS:
  `UPDATE TB_HOT_KEY
    SET CLASS_TITLE = ?
      , CLASS_NM = ?
   WHERE HOT_KEY_TYPE = ?
    AND CLASS_ID = ?
  `,

  INSERT_COMMON_CODE_GRP:
  `INSERT OR IGNORE INTO TB_COMMON_CODE_GRP
    VALUES('A00', 'hotkey type', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('A01', 'analysis type', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('A02', 'connection type', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
  `,

  INSERT_COMMON_CODE:
  `INSERT OR IGNORE INTO TB_COMMON_CODE
    VALUES('A00', '01', 'WBC', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('A00', '02', 'BF', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('A01', '01', 'WBC', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('A01', '02', 'RBC', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('A01', '03', 'BF', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('A01', '04', 'BM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('A02', '01', 'file', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('A02', '02', 'http', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
  `,

  INSERT_WBC_CUSTOM_CLASS:
  `INSERT OR IGNORE INTO TB_WBC_CUSTOM_CLASS
    VALUES('90', '', '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('91', '', '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('92', '', '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('93', '', '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('94', '', '', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
  `,

  SELECT_WBC_CUSTOM_CLASS:
  `SELECT CLASS_ID
    , CLASS_TITLE
    , CLASS_NM
   FROM TB_WBC_CUSTOM_CLASS
   WHERE 1=1
  `,

  UPDATE_WBC_CUSTOM_CLASS:
  `UPDATE TB_WBC_CUSTOM_CLASS
    SET CLASS_TITLE = ?
      , CLASS_NM = ?
   WHERE CLASS_ID = ?
  `,

  SELECT_EMP_NO:
  `SELECT EMP_NO
    FROM TB_USER
   WHERE 1=1
	  AND USER_ID = ?`,

  INSERT_LIS_CODE:
  `INSERT OR REPLACE INTO TB_LIS_TEST_CODE
   (IA_CD
     , LIS_CD
     , CD_NM
     , MIN_COUNT
     , CREATE_DTTM
     , CREATE_ID
     , MODIFY_DTTM
     , MODIFY_ID)
  VALUES(?,?,?,?,?,?,?,?)`,

  INSERT_LIS_CODE_RBC:
  `INSERT OR REPLACE INTO TB_LIS_TEST_CODE_RBC
   (IA_CATEGORY_CD
	   , IA_CLASS_CD
     , LIS_CD
     , CATEGORY_NM
     , CLASS_NM
     , CREATE_DTTM
     , CREATE_ID
     , MODIFY_DTTM
     , MODIFY_ID)
  VALUES(?,?,?,?,?,?,?,?,?)`,

  SELECT_LIS_CODE:
  `SELECT
     IA_CD
     , LIS_CD
     , CD_NM
     , MIN_COUNT
   FROM TB_LIS_TEST_CODE
   WHERE 1=1`,

  SELECT_LIS_CODE_RBC:
  `SELECT
     IA_CATEGORY_CD
     , IA_CLASS_CD
     , LIS_CD
     , CATEGORY_NM
     , CLASS_NM
   FROM TB_LIS_TEST_CODE_RBC
   WHERE 1=1`,

  INSERT_CBC_CODE:
  `INSERT OR REPLACE INTO TB_CBC_TEST_CODE
    (IA_CD
      , CBC_CD
      , CD_NM
      , IS_SELECTED
      , CREATE_DTTM
      , CREATE_ID
      , MODIFY_DTTM
      , MODIFY_ID)
  VALUES(?,?,?,?,?,?,?,?)`,

  SELECT_CBC_CODE:
  `SELECT
    IA_CD
    , CBC_CD
    , CD_NM
    , IS_SELECTED
  FROM TB_CBC_TEST_CODE
  WHERE 1=1`,

  SELECT_LIS_CONN_PATH:
  `SELECT
    DEVICE_BARCODE
    , LIS_FILE_PATH
    , LIS_URL
    , LIS_CONN_TYPE_CD
    , CBC_FILE_PATH
    , CBC_URL
    , CBC_CONN_TYPE_CD
  FROM TB_LIS_CONN_PATH
  WHERE 1=1
    AND DEVICE_BARCODE = ?`,

  UPDATE_LIS_CONN_PATH:
  `INSERT OR REPLACE INTO TB_LIS_CONN_PATH
    (DEVICE_BARCODE
      , LIS_FILE_PATH
      , LIS_URL
      , LIS_CONN_TYPE_CD
      , CBC_FILE_PATH
      , CBC_URL
      , CBC_CONN_TYPE_CD
      , CREATE_DTTM
      , CREATE_ID
      , MODIFY_DTTM
      , MODIFY_ID)
  VALUES(?,?,?,?,?,?,?,?,?,?,?)`,

  SELECT_BACKUP_LIST:
  `SELECT *
    FROM TB_TEST_HISTORY
   WHERE 1=1
    AND SUBSTR(ANALYZE_DTTM, 1, 8) BETWEEN REPLACE(?, '-', '') AND REPLACE(?, '-', '')`,

  DELETE_BACKUP_TEST_HISTORY:
  `DELETE
    FROM TB_TEST_HISTORY
   WHERE CASSET_ID = ?
    AND SLOT_ID = ?`,

  INSERT_BACKUP_HIST:
  `INSERT INTO TB_BACKUP_HIST
    (
      CASSET_ID
      , SLOT_ID
      , IS_BACKUP
      , BACKUP_DTTM
      , RESTORE_DTTM
      , CREATE_DTTM
      , CREATE_ID
      , MODIFY_DTTM
      , MODIFY_ID
    )
   VALUES(?,?,?,?,?,?,?,?,?)`,

  INSERT_VIEWER_LOCK:
  `INSERT OR REPLACE INTO TB_VIEWER_LOCK_INFO
   (
     CASSET_ID
     , SLOT_ID
     , USER_ID
     , MACHINE_ID
     , HOST_IP
     , LOCAL_IP
     , LOCK_STATE
     , LOCK_DTTM
     , CREATE_DTTM
     , CREATE_ID
     , MODIFY_DTTM
     , MODIFY_ID
   )
   VALUES(?,?,?,?,?,?,?,?,?,?,?,?)`,

   CHECK_SLIDE_LOCK_STATE:
   `SELECT CASSET_ID
        , SLOT_ID
        , USER_ID
        , MACHINE_ID
        , HOST_IP
        , LOCAL_IP
        , LOCK_DTTM
        , IFNULL(MIN(LOCK_STATE), 'N') AS LOCK_STATE
     FROM TB_VIEWER_LOCK_INFO
    WHERE CASSET_ID = ?
	   AND SLOT_ID = ?`,

   SELECT_NORMAL_RANGE:
   `SELECT ANALYSIS_TYPE
       , CLASS_ID
       , CLASS_TITLE
       , CLASS_NM
       , MIN
       , MAX
       , UNIT
       , CREATE_DTTM
       , CREATE_ID
       , MODIFY_DTTM
       , MODIFY_ID
     FROM TB_NORMAL_RANGE
    WHERE 1=1`,

   UPDATE_NORMAL_RANGE:
   `UPDATE TB_NORMAL_RANGE
     SET MIN = ?
       , MAX = ?
       , UNIT = ?
    WHERE ANALYSIS_TYPE = ?
      AND CLASS_ID = ?`,

   INSERT_DEFAULT_NORMAL_RANAGE:
   `INSERT OR IGNORE INTO TB_NORMAL_RANGE
     VALUES ('01', '01', 'NE', 'Neutrophil', '42', '85', '%', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '02', 'ME', 'Metamyelocyte', '0', '100', '%', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '03', 'MY', 'Myelocyte', '0', '100', '%', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '04', 'PR', 'Promyelocyte', '0', '100', '%', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '05', 'LY', 'Lymphocyte', '11', '49', '%', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '61', 'LR', 'Reactive lymphocyte', '0', '100', '%', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '62', 'LA', 'Abnormal lymphocyte', '0', '100', '%', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '07', 'MO', 'Monocyte', '0', '9', '%', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '08', 'EO', 'Eosinophil', '0', '6', '%', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '09', 'BA', 'Basophil', '0', '2', '%', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '10', 'BL', 'Blast', '0', '100', '%', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '11', 'PC', 'Plasma cell', '0', '100', '%', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '12', 'NR', 'nRBC', '0', '100', 'Count', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '13', 'GP', 'Giant platelet', '0', '100', 'Count', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '14', 'PA', 'Platelet aggregation', '0', '100', 'Count', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '15', 'AR', 'Artifact(Smudge)', '0', '100', 'Count', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
       , ('01', '16', 'MA', 'Malaria', '0', '100', 'Count', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')`,

  INSERT_DEFAULT_CLASS_ORDER:
  `INSERT OR IGNORE INTO TB_WBC_CLASS_ORDER
    VALUES ('01', '1', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('71', '2', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('72', '3', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('02', '4', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('03', '5', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('04', '6', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('05', '7', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('61', '8', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('62', '9', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('07', '10', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('08', '11', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('09', '12', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('10', '13', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('11', '14', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('12', '15', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('13', '16', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('14', '17', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('16', '18', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
      , ('15', '19', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM', strftime('%Y%m%d%H%M%S', 'now'), 'SYSTEM')
  `,

  SELECT_SKMC_RESULT_CD:
  `SELECT RESULT_CD
      , RESULT_CD_NM
    FROM TB_SKMC_RESULT_CD
   WHERE 1=1`,

  INSERT_SKMC_RESULT_CD:
  `INSERT OR REPLACE INTO TB_SKMC_RESULT_CD
   (
     RESULT_CD
     , RESULT_CD_NM
     , CREATE_DTTM
     , CREATE_ID
     , MODIFY_DTTM
     , MODIFY_ID
   )
   VALUES(?,?,?,?,?,?)
  `,

  DELETE_SKMC_RESULT_CD:
  `DELETE
    FROM TB_SKMC_RESULT_CD
   WHERE RESULT_CD = ?`,

  SELECT_REMARK:
  `SELECT REMARK_CD
      , REMARK_CONTENTS
    FROM TB_SKMC_REMARK
   WHERE 1=1`,

   INSERT_REMARK:
   `INSERT OR REPLACE INTO TB_SKMC_REMARK
    (
      REMARK_CD
      , REMARK_CONTENTS
      , CREATE_DTTM
      , CREATE_ID
      , MODIFY_DTTM
      , MODIFY_ID
    )
    VALUES(?,?,?,?,?,?)`,

    DELETE_REMARK:
    `DELETE
      FROM TB_SKMC_REMARK
     WHERE REMARK_CD = ?`,

    INSERT_SKMC_RESULT_FAVORITE_RBC:
    `INSERT OR REPLACE INTO TB_SKMC_RESULT_FAVORITE_RBC
      (
        RESULT_CD
        , SIZE_CD
        , CHROMICITY_CD
        , ANISOCYTOSIS_CD
        , POIKILOCYTOSIS_CD
        , ELLIPTOCYTE_CD
        , BURRCELL_CD
        , TARGET_CELL_CD
        , SPHEROCYTE_CD
        , SCHISTOCYTE_CD
        , DIMORPHISM_CD
        , ROULEAUX_CD
        , POLYCHROMASIA_CD
        , BASO_CD
        , H_J_BODY_CD
        , NRBC_CD
        , OTHER_CD
        , CREATE_DTTM
        , CREATE_ID
        , MODIFY_DTTM
        , MODIFY_ID
      )
      VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)`,

    INSERT_SKMC_RESULT_FAVORITE_WBC:
    `INSERT OR REPLACE INTO TB_SKMC_RESULT_FAVORITE_WBC
      (
        RESULT_CD
        , NUMBER_CD
        , TOXIC_GRANULE_CD
        , TOXIC_VACUOLE_CD
        , DOHLE_BODY_CD
        , L_S_MATURATION_CD
        , N_SEGMENTATION_CD
        , OTHER_CD
        , CREATE_DTTM
        , CREATE_ID
        , MODIFY_DTTM
        , MODIFY_ID
      )
      VALUES(?,?,?,?,?,?,?,?,?,?,?,?)`,

    INSERT_SKMC_RESULT_FAVORITE_PLT:
    `INSERT OR REPLACE INTO TB_SKMC_RESULT_FAVORITE_PLT
     (
       RESULT_CD
       , NUMBER_CD
       , SIZE_CD
       , CLUMPING_CD
       , CREATE_DTTM
       , CREATE_ID
       , MODIFY_DTTM
       , MODIFY_ID
     )
     VALUES(?,?,?,?,?,?,?,?)`,

    INSERT_SKMC_MAPPING_REMARK:
    `INSERT OR REPLACE INTO TB_SKMC_MAPPING_REMARK
     (
       RESULT_CD
       , REMARK_CD
       , CREATE_DTTM
       , CREATE_ID
       , MODIFY_DTTM
       , MODIFY_ID
     )
     VALUES(?,?,?,?,?,?)`,

   DELETE_SKMC_FAVORITE_REMARK:
   `DELETE FROM TB_SKMC_FAVORITE_REMARK
    WHERE RESULT_CD = ?`,

   INSERT_SKMC_FAVORITE_REMARK:
   `INSERT OR REPLACE INTO TB_SKMC_FAVORITE_REMARK
    (
      RESULT_CD
      , REMARK_CD
      , SEQ_NO
      , REMARK_CONTENTS
      , CREATE_DTTM
      , CREATE_ID
      , MODIFY_DTTM
      , MODIFY_ID
    )
    VALUES(?,?,?,?,?,?,?,?)`,

    SELECT_SKMC_FAVORITE:
    `SELECT A.RESULT_CD
       , B.SIZE_CD              	AS RBC_SIZE_CD
       , B.CHROMICITY_CD        	AS RBC_CHROMICITY_CD
       , B.ANISOCYTOSIS_CD      	AS RBC_ANISOCYTOSIS_CD
       , B.POIKILOCYTOSIS_CD    	AS RBC_POIKILOCYTOSIS_CD
       , B.ELLIPTOCYTE_CD       	AS RBC_ELLIPTOCYTE_CD
       , B.BURRCELL_CD          	AS RBC_BURRCELL_CD
       , B.TARGET_CELL_CD       	AS RBC_TARGET_CELL_CD
       , B.SPHEROCYTE_CD        	AS RBC_SPHEROCYTE_CD
       , B.SCHISTOCYTE_CD       	AS RBC_SCHISTOCYTE_CD
       , B.DIMORPHISM_CD        	AS RBC_DIMORPHISM_CD
       , B.ROULEAUX_CD          	AS RBC_ROULEAUX_CD
       , B.POLYCHROMASIA_CD     	AS RBC_POLYCHROMASIA_CD
       , B.BASO_CD              	AS RBC_BASO_CD
       , B.H_J_BODY_CD          	AS RBC_H_J_BODY_CD
       , B.NRBC_CD              	AS RBC_NRBC_CD
       , B.OTHER_CD             	AS RBC_OTHER_CD
       , C.NUMBER_CD				      AS WBC_NUMBER_CD
       , C.TOXIC_GRANULE_CD		    AS WBC_TOXIC_GRANULE_CD
       , C.TOXIC_VACUOLE_CD		    AS WBC_TOXIC_VACUOLE_CD
       , C.DOHLE_BODY_CD			    AS WBC_DOHLE_BODY_CD
       , C.L_S_MATURATION_CD		  AS WBC_L_S_MATURATION_CD
       , C.N_SEGMENTATION_CD		  AS WBC_N_S_MATURATION_CD
       , C.OTHER_CD				        AS WBC_OTHER_CD
       , D.NUMBER_CD				      AS PLT_NUMBER_CD
       , D.SIZE_CD					      AS PLT_SIZE_CD
       , D.CLUMPING_CD				    AS PLT_CLUMPING_CD
       , (SELECT JSON_GROUP_ARRAY(
        		JSON_OBJECT('remarkCd', A.REMARK_CD, 'text', A.REMARK_CONTENTS, 'seqNo', A.SEQ_NO))
        	FROM TB_SKMC_FAVORITE_REMARK A
        	WHERE
        	  A.RESULT_CD = ?) AS JSON_REMARKS
      FROM TB_SKMC_RESULT_CD A
      	, TB_SKMC_RESULT_FAVORITE_RBC B
      	, TB_SKMC_RESULT_FAVORITE_WBC C
      	, TB_SKMC_RESULT_FAVORITE_PLT D
      WHERE A.RESULT_CD = ?
      	AND A.RESULT_CD = B.RESULT_CD
      	AND A.RESULT_CD = C.RESULT_CD
      	AND A.RESULT_CD = D.RESULT_CD`,

    SELECT_TEST_BARCODES:
    `SELECT BARCODE_NO
      FROM TB_TEST_HISTORY
     WHERE 1=1`,

    INSERT_WBC_RUNNING_COUNT:
    `INSERT OR REPLACE INTO TB_WBC_RUNNING_COUNT
     (
       ID
       , MIN
       , MAX
       , COUNT
       , CREATE_DTTM
       , CREATE_ID
       , MODIFY_DTTM
       , MODIFY_ID
     )
     VALUES(?,?,?,?,?,?,?,?)`,

    SELECT_WBC_RUNNING_COUNT:
    `SELECT ID
      , MIN
      , MAX
      , COUNT
      , CREATE_DTTM
      , CREATE_ID
      , MODIFY_DTTM
      , MODIFY_ID
     FROM TB_WBC_RUNNING_COUNT
    WHERE 1=1`
})
